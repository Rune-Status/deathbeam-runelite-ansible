-
  name: ensure {{ directory }}/mysql/init dir exists
  file: path="{{ directory }}/mysql/init" state=directory
-
  name: write database init sql file
  template:
    src: init.sql.j2
    dest: "{{ directory }}/mysql/init/init.sql"
-
  name: write database dump sql files
  copy: src="{{ item }}.sql" dest="{{ directory }}/mysql/init/{{ item }}.sql"
  with_items: "{{ resources }}"
-
  name: ensure {{ directory }}/mysql/plugins dir exists
  file: path="{{ directory }}/mysql/plugins" state=directory
-
  name: write database plugins
  copy:
    src: libxp.so
    dest: "{{ directory }}/mysql/plugins/libxp.so"
-
  name: deploy database container
  docker_container:
    name: db
    image: "mariadb:10.2.16"
    command: "--plugin-dir=/docker-entrypoint-dbplugins"
    restart_policy: always
    env:
      MYSQL_ROOT_PASSWORD: "{{ database.root_password }}"
    volumes:
      - "{{ '/var/lib/mysql:/var/lib/mysql' if database.mount_library else directory + '/mysql/init/:/docker-entrypoint-initdb.d' }}"
      - "{{ directory }}/mysql/plugins/:/docker-entrypoint-dbplugins"
-
  name: get database IP address
  command: "docker inspect --format '{''{ .NetworkSettings.IPAddress }''}' db"
  register: mariadb_ip_address
-
  name: wait for database to become ready
  wait_for:
    host: "{{ mariadb_ip_address.stdout }}"
    port: 3306
    state: started
    connect_timeout: 15
    delay: 5
    timeout: 30
