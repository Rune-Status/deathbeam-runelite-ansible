-
  name: ensure {{ directory }}/mysql/init dir exists
  file: path="{{ directory }}/mysql/init" state=directory
-
  name: write database init sql file
  template:
    src: init.sql.j2
    dest: "{{ directory }}/mysql/init/init.sql"
-
  name: write database dump sql files
  copy: src="{{ item.database }}.sql" dest="{{ directory }}/mysql/init/{{ item.database }}.sql"
  with_items: "{{ mariadb.resources }}"
-
  name: ensure {{ directory }}/mysql/plugins dir exists
  file: path="{{ directory }}/mysql/plugins" state=directory
-
  name: download database plugin
  get_url:
    url: "https://github.com/runelite/runelite-mysql/releases/download/0.1/libxp.so"
    dest: "{{ directory }}/mysql/plugins/libxp.so"
    checksum: sha256:d8c09e85a626e8bb4a2a8e63be240238afa4bea629b5bae526ec41c54fa45d8a
-
  name: deploy database container
  docker_container:
    name: mariadb
    hostname: mariadb.local
    networks:
      - name: "{{ docker.network }}"
    image: "mariadb:10.2.16"
    command: "--plugin-dir=/docker-entrypoint-dbplugins"
    restart_policy: always
    ports:
      - "3306:3306"
    env:
      MYSQL_ROOT_PASSWORD: "{{ mariadb.root_password }}"
    volumes:
      - "{{ '/var/lib/mysql:/var/lib/mysql' if mariadb.mount_library else directory + '/mysql/init/:/docker-entrypoint-initdb.d' }}"
      - "{{ directory }}/mysql/plugins/:/docker-entrypoint-dbplugins"
-
  name: get database IP address
  command: "docker inspect --format '{''{ .NetworkSettings.IPAddress }''}' mariadb"
  register: mariadb_ip_address
-
  name: wait for database to become ready
  wait_for:
    host: "{{ mariadb_ip_address.stdout }}"
    port: 3306
    state: started
    connect_timeout: 15
    delay: 5
    timeout: 30
